{"version":3,"file":"ngx-leaflet-markercluster.umd.js","sources":["../leaflet-markercluster/leaflet-markercluster.directive.js","../leaflet-markercluster/leaflet-markercluster.module.js"],"sourcesContent":["import { Directive, EventEmitter, Input, Output } from '@angular/core';\nimport { LeafletDirective, LeafletDirectiveWrapper } from '@asymmetrik/ngx-leaflet';\nimport * as L from 'leaflet';\nimport 'leaflet.markercluster';\nvar LeafletMarkerClusterDirective = /** @class */ (function () {\n    function LeafletMarkerClusterDirective(leafletDirective) {\n        // Hexbin data binding\n        this.markerData = [];\n        // Fired when the marker cluster is created\n        this.markerClusterReady = new EventEmitter();\n        this.leafletDirective = new LeafletDirectiveWrapper(leafletDirective);\n    }\n    LeafletMarkerClusterDirective.prototype.ngOnInit = function () {\n        this.leafletDirective.init();\n        var map = this.leafletDirective.getMap();\n        this.markerClusterGroup = L.markerClusterGroup(this.markerClusterOptions);\n        // Add the marker cluster group to the map\n        this.markerClusterGroup.addTo(map);\n        // Set the data now that the markerClusterGroup exists\n        this.setData(this.markerData);\n        // Fire the ready event\n        this.markerClusterReady.emit(this.markerClusterGroup);\n    };\n    LeafletMarkerClusterDirective.prototype.ngOnChanges = function (changes) {\n        // Set the new data\n        if (changes['markerData']) {\n            this.setData(this.markerData);\n        }\n    };\n    LeafletMarkerClusterDirective.prototype.setData = function (layers) {\n        // Ignore until the markerClusterGroup exists\n        if (null != this.markerClusterGroup) {\n            this.markerClusterGroup.clearLayers();\n            this.markerClusterGroup.addLayers(layers);\n        }\n    };\n    LeafletMarkerClusterDirective.decorators = [\n        { type: Directive, args: [{\n                    selector: '[leafletMarkerCluster]',\n                },] }\n    ];\n    LeafletMarkerClusterDirective.ctorParameters = function () { return [\n        { type: LeafletDirective }\n    ]; };\n    LeafletMarkerClusterDirective.propDecorators = {\n        markerData: [{ type: Input, args: ['leafletMarkerCluster',] }],\n        markerClusterOptions: [{ type: Input, args: ['leafletMarkerClusterOptions',] }],\n        markerClusterReady: [{ type: Output, args: ['leafletMarkerClusterReady',] }]\n    };\n    return LeafletMarkerClusterDirective;\n}());\nexport { LeafletMarkerClusterDirective };\n//# sourceMappingURL=leaflet-markercluster.directive.js.map","import { NgModule } from '@angular/core';\nimport { LeafletMarkerClusterDirective } from './leaflet-markercluster.directive';\nvar LeafletMarkerClusterModule = /** @class */ (function () {\n    function LeafletMarkerClusterModule() {\n    }\n    LeafletMarkerClusterModule.decorators = [\n        { type: NgModule, args: [{\n                    exports: [LeafletMarkerClusterDirective],\n                    declarations: [LeafletMarkerClusterDirective]\n                },] }\n    ];\n    return LeafletMarkerClusterModule;\n}());\nexport { LeafletMarkerClusterModule };\n//# sourceMappingURL=leaflet-markercluster.module.js.map"],"names":["EventEmitter","LeafletDirectiveWrapper","L.markerClusterGroup","Directive","LeafletDirective","Input","Output","NgModule"],"mappings":"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"}